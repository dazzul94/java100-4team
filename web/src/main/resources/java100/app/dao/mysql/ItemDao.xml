<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="java100.app.dao.ItemDao">
    <resultMap type="item" id="itemMap">
        <id column="it_no" property="itemNo"/>
        <result column="ur_no" property="userNo"/>
        <result column="category" property="category"/>
        <result column="user_type" property="userType"/>
        <result column="item_name" property="name"/>
        <result column="title" property="title"/>
        <result column="cnt" property="content"/>
        <result column="start" property="startDate"/>
        <result column="end" property="endDate"/>
        <result column="price" property="price"/>
        <result column="price_day" property="pricePerDay"/>
        <result column="status" property="status"/>
        
        <collection property="photos" ofType="Photo">
            <id column="pho_no" property="no"/>
            <result column="it_no" property="itemNo"/>
            <result column="pho_name" property="photoName"/>
            <result column="th_name" property="thumbnailName"/>
        </collection>
        
    </resultMap>
    
    <select id="countAll" resultType="int" parameterType="map">
        select count(*) from item where user_type=#{userType}
        <if test="categoryNo != 0">
            and category=#{categoryNo}
        </if>
        <if test="words != null">
            <foreach collection="words" item="word">
                and title like '%${word}%'
             </foreach>
        </if>
    </select>
    
    <insert id="insert" parameterType="item"
        useGeneratedKeys="true" keyColumn="it_no" keyProperty="itemNo">
        insert into item(ur_no,category,user_type,title,item_name,cnt,start,end,price,price_day,status) 
        values(#{userNo},#{category},#{userType},#{title},#{name},#{content},#{startDate},
                #{endDate},#{price},#{pricePerDay},#{status})
    </insert>
    <select id="findAll" resultMap="itemMap" parameterType="map">
        select 
            i.it_no, i.ur_no, i.category, i.user_type, i.item_name, 
            i.title, i.cnt, i.start, i.end,
            i.price, i.price_day, i.status,
            p.pho_no as pho_no,
            GROUP_CONCAT(p.pho_name order by p.pho_name) as pho_name,
            GROUP_CONCAT(p.th_name order by p.th_name) as th_name
            from item as i
            join user as u on i.ur_no=u.ur_no
            join itemphoto as p on i.it_no=p.it_no 
            where user_type=#{userType} 
        <if test="categoryNo != 0">
            and category=#{categoryNo}
        </if>
        
        <if test="words != null">
            <foreach collection="words" item="word">
                and title like '%${word}%'
             </foreach>
        </if>
        group by it_no
        <!-- 정렬 조건에 따라 SQL문을 변경한다.-->
        order by 
        <choose>
            <when test="orderColumn == 'title' and align == 'desc'">
                i.title desc
            </when>
            <when test="orderColumn == 'title' and align == 'asc'">
                i.title asc
            </when>
            <when test="orderColumn == 'it_no' and align == 'desc'">
                i.it_no desc
            </when>
            <when test="orderColumn == 'it_no' and align == 'asc'">
                i.it_no asc
            </when>
            <otherwise>
                i.it_no desc
            </otherwise>
        </choose>
        
        <!-- 페이지징 처리 -->
        limit #{startIndex}, #{size}
    </select>
 
    
    <select id="findByNo" resultMap="itemMap" parameterType="int">
        select
            i.it_no,
            i.ur_no,
            i.category,
            i.user_type,
            i.item_name,
            i.title,
            i.cnt,
            i.start,
            i.end,
            i.price,
            i.price_day,
            i.status,
            GROUP_CONCAT(p.pho_name order by p.pho_name) as pho_name
            from item as i join itemphoto as p on i.it_no=p.it_no 
            where i.it_no=#{value}
            group by it_no
    </select>

    <update id="update" parameterType="item">
        update item set 
            status=#{status}
        where it_no=#{itemNo}
    </update>

</mapper>









